# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

commands:
  print_pipeline_id:
    description: "A simple command to print the pipeline id to the console"
    parameters:
      args:
        type: string
        default: "Hello"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  say-welcome:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout # Invoke jobs via workflows
      - run:
          name: "Say Welcome"
          command: echo "Welcome" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print-output-file:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt

  print-name:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          command: echo $USERNAME

  print-id:
    docker:
      - image: cimg/base:stable
    steps:
      - print_pipeline_id:
        args: ${CIRCLE_WORKFLOW_ID}

workflows:
  myworkflows:
    jobs:
      - say-hello
      - print-name
      - say-welcome
      - print-output-file:
          requires:
            - say-welcome
      - print-id
